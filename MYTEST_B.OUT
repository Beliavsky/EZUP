      PROGRAM CNVRT2
      IMPLICIT NONE
      INTEGER(2) :: IJKLMN, MYCDEF
! ** BEGIN  EZUP-GENERATED 'INTENT' STATEMENTS **
! ** END OF EZUP-GENERATED 'INTENT' STATEMENTS **
!     convert digitizer data to absolute data
!  with: interpolation at 5 deg increments in angle
!
!     assumes data collected using pgm DIGI01.FOR
!
      CHARACTER(LEN=64) :: INFILE
      CHARACTER(LEN=64) :: OUTFIL
      CHARACTER(LEN=78) :: MESSAG
      CHARACTER(LEN=64) :: BASNAM
      CHARACTER(LEN=64) :: TMPNAM
      CHARACTER INFILE*64,OUTFIL*64,MESSAG*78,BASNAM*64,TMPNAM*64
      REAL(4) :: XRAW(100),YRAW(100),XBAR(100),YBAR(100)
      REAL(4) :: XABS(100),YABS(100),ELX(4),XOUT(181),YOUT(181)
      LUIN=1
      LUOUT=2
      MESSAG='ENTER THE NAME OF THE INPUT DATA FILE (FROM DIGI01):'
      CALL GTNF88(LUIN,0,MESSAG,INFILE,IERR)
      IF(IERR.NE.0)STOP
      MESSAG='ENTER A NAME FOR THE OUTPUT FILE (CONVERTED DATA):'
      CALL GTOF88(LUOUT,0,MESSAG,OUTFIL,IERR)
      IF(IERR.LT.0)STOP
      IF(IERR.EQ.1)LUOUT=6
      CALL NPARSE(OUTFIL,BASNAM,LAST)
!     xmin and ymin are absolute values of coords at origin of measureme
!     xmax is abs value of x variable at rh end of axis
!     ymax is abs value of y variable at top of y axis
!     xlen and ylen are physical lengths of the axes in same units
!     xorg and yorg are the digitized integer coords for origin of graph
!     a and y will the floated integer digitized coords of a point
!     xbar and ybar are the converted values
!
      READ(LUIN,*)XMIN,XMAX
      READ(LUIN,*)YMIN,YMAX
      READ(LUIN,*)XPOBAR,YPOBAR
      READ(LUIN,*)XPE,YPE
      READ(LUIN,*)XPT,YPT
!     CALCULATE TILT OF GRAPH XBAR AXIS WRT XPRIME(DIGITIZER X-AXIS)
      THETA=ATAN((YPE-YPOBAR)/(XPE-XPOBAR))
!     AND THE SINE AD COSINE FOR COORD TRANSFORMATIONS
      CT=COS(THETA)
      ST=SIN(THETA)
!     SOME CONVERSIONS FROM DIGITIZER TO GRAPH PHYSICAL AXES (XBAR,YBAR)
      XBARE=CT*(XPE-XPOBAR)+ST*(YPE-YPOBAR)
      YBARE=-ST*(XPE-XPOBAR)+CT*(YPE-YPOBAR)
      XBART=CT*(XPT-XPOBAR)+ST*(YPT-YPOBAR)
      YBART=-ST*(XPT-XPOBAR)+CT*(YPT-YPOBAR)
      XBARO=0
      YBARO=0
      A=(YBART-YBARO)/ALOG10(YMAX/YMIN)
      B=YBARO-A*ALOG10(YMIN)
      C=(XMAX-XMIN)/(XBARE-XBARO)
      D=XMIN-C*XBARO
!
!     create file for the auxillary working data
!
      TMPNAM=BASNAM
      TMPNAM(LAST+1:LAST+4)='.AUX'
      OPEN(UNIT=3,FILE=TMPNAM,STATUS='UNKNOWN')
      WRITE(3,*)'XMIN,XMAX:     ',XMIN,XMAX
      WRITE(3,*)'YMIN,YMAX:     ',YMIN,YMAX
      WRITE(3,*)'XPOBAR,YPOBAR: ',XPOBAR,YPOBAR
      WRITE(3,*)'XPE,YPE:       ',XPE,YPE
      WRITE(3,*)'XPT,YPT:       ',XPT,YPT
      WRITE(3,*)'THETA:         ',THETA
      WRITE(3,*)'XBARE,YBARE:   ',XBARE,YBARE
      WRITE(3,*)'XBART,YBART:   ',XBART,YBART
      WRITE(3,*)'A,B:           ',A,B
      WRITE(3,*)'C,D:           ',C,D
      CLOSE(3)
!
! ???? WHERE ARE XLEN AND YLEN ????
!
!     READ RAW DIGITIZER COORDS AND CONVERT TO GRAPH XBAR,YBAR COORDS
!
      N=0
      READ(LUIN,*,ERR=170)XDUM,YDUM
!     CHECK FOR TERMINATING NEGATIVE INPUT DATA VALUES
      IF(XDUM.LT.0.0.AND.YDUM.LT.0.0)GO TO  20
      N=N+1
      XRAW(N)=XDUM
      YRAW(N)=YDUM
      XDUM=XRAW(N)-XPOBAR
      YDUM=YRAW(N)-YPOBAR
      XBAR(N)=CT*XDUM+ST*YDUM
      YBAR(N)=-ST*XDUM+CT*YDUM
      GOTO100
!
   20 NPTS=N
!
!     CONVERT FROM GRAPH COORDS TO ABSOLUTE VALUES
!
      DO N=1,NPTS
         XABS(N)=C*XBAR(N)+D
         YABS(N)=10**((YBAR(N)-B)/A)
      WRITE(LUOUT,160) XABS(N),YABS(N)
      END DO
      CLOSE(LUOUT)
!     now want to interpolate over to a uniform angle-scale-> xout()
!     First set up the desired xvalues
!
      NANG=37
      DELX=180.0/(NANG-1)
      DO N=1,NANG
      XOUT(N)=(N-1)*DELX
      END DO
!
!     create file for the interpolated data
!
      TMPNAM=BASNAM
      TMPNAM(LAST+1:LAST+4)='.FIT'
      OPEN(UNIT=9,FILE=TMPNAM,STATUS='UNKNOWN')
!
      NQ=NPTS
!
!     cycle through the XABS() array and find smallest value of adjusted
!     x <= each desired output value of x. Then apply fitting routine.
!
      DO JOUT=1,NANG
         XWANT=XOUT(JOUT)
! ABORT interpolation for points XWANT > largest actual data point!
         IF(XWANT.GT.XABS(NPTS))GO TO  150
         DO I=1,NQ
            IF(XWANT.LE.XABS(I))GO TO  60
         END DO
         GOTO340
   60    IF(I.EQ.1)GO TO  70
         IF(I.EQ.2)GO TO  70
         IF(I.EQ.NQ)GO TO  80
         IMN=I-1
         IMX=I+1
         GOTO350
!
!     SPECIAL CASE: USE FIRST three VALUES OF xabs(I)
!
   70    IMN=1
         IMX=3
         GOTO350
!
!     SPECIAL CASE: USE LAST three VALUES OF xabs(I)
!
   80    IMN=NQ-2
         IMX=NQ
!
!     INITIALIZE L-SUB-X VALUES
!
         DO I=1,3
         ELX(I)=1.0D+00
         END DO
!
!     CALCULATE THE INTERPOLATION FACTORS L-SUB-X
!
         DO I=IMN,IMX
            IP=I+1-IMN
            DO J=IMN,IMX
!
!     OMIT SITUATION I = J IN DOING INTERPOLATION CALCS
!
               IF(I.NE.J)ELX(IP)=ELX(IP)*(XWANT-XABS(J))/(XABS(I)-XABS(J&
     &))
            END DO
         END DO
!      NV=NOUT
!      DO 380 J=1,NV
         YOUT(JOUT)=0.0D+00
         DO I=IMN,IMX
            IP=I+1-IMN
         YOUT(JOUT)=YOUT(JOUT)+ELX(IP)*YABS(I)
         END DO
      WRITE(9,160) XOUT(JOUT),YOUT(JOUT)
      END DO
  150 IJKLMN=1
      CLOSE(9)
!
!
      GOTO9200
!* WARNING: CANNOT CONVERT "FORMAT" STATEMENTS
  160 FORMAT(1x,1P,e10.3,5x,e10.3)
  170 WRITE(*,*)'FAILED TO DETECT END OF VALID DATA'
      CLOSE(LUIN)
      CLOSE(LUOUT)
      STOP
      END PROGRAM CNVRT2
! ** LABEL    10 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL    30 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL    40 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL    50 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL    90 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL   100 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL   110 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL   120 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL   130 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL   140 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL   180 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
!
!    LIST OF APPARENT VARIABLE NAMES FOLLOWS:
!    BUT,ARRAY NAMES WILL GENERALLY BE MISSING.
!    AND THERE ARE SOME ERRORS LIKE END, FILE
!    PICKED FROM THINGS LIKE: FILE=, END=, ETC.
!
!     LUIN
!     LUOUT
!     MESSAG
!     THETA
!     CT
!     ST
!     XBARE
!     YBARE
!     XBART
!     YBART
!     XBARO
!     YBARO
!     A
!     B
!     C
!     D
!     TMPNAM
!     N
!     IJKLMN
!     XDUM
!     YDUM
!     NPTS
!     NANG
!     DELX
!     NQ
!     JOUT
!     XWANT
!     I
!     MYCDEF
!     IMN
!     IMX
!     IP
!     J
! $$$$$$$$$$$$$ END OF PROGRAM UNIT $$$$$$$$$$$
!
!
      SUBROUTINE NPARSE(INNAME,BASNAM,LAST)
      IMPLICIT NONE
      INTEGER(2) :: IJKLMN, MYCDEF
! ** BEGIN  EZUP-GENERATED 'INTENT' STATEMENTS **
      CHARACTER(LEN=64)  , INTENT(INOUT) :: INNAME
      CHARACTER(LEN=24)  , INTENT(INOUT) :: BASNAM
      UNKNOWN, INTENT(INOUT) :: LAST
! ** END OF EZUP-GENERATED 'INTENT' STATEMENTS **
      CHARACTER(LEN=64) :: INNAME
      CHARACTER(LEN=24) :: BASNAM
      CHARACTER(LEN=1) :: ACHR
      BASNAM=' '
! I want to separate off everything to left of dec. pt. as basnam
      I=0
      I=I+1
      ACHR=INNAME(I:I)
      IF(ACHR.EQ.'.')GO TO  20
      GOTO5
   20 LAST=I-1
      DO I=1,LAST
      BASNAM(I:I)=INNAME(I:I)
      END DO
      WRITE (*,*)'BASE NAME: ', BASNAM
      RETURN
      END SUBROUTINE NPARSE
! ** LABEL    10 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
! ** LABEL    30 WAS NEVER REFERENCED, SO LABEL AND/OR LINE WAS DELETED.
!
!    LIST OF APPARENT VARIABLE NAMES FOLLOWS:
!    BUT,ARRAY NAMES WILL GENERALLY BE MISSING.
!    AND THERE ARE SOME ERRORS LIKE END, FILE
!    PICKED FROM THINGS LIKE: FILE=, END=, ETC.
!
!     BASNAM
!     I
!     ACHR
!     LAST
! $$$$$$$$$$$$$ END OF PROGRAM UNIT $$$$$$$$$$$
!
